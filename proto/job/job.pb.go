// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/job/job.proto

package job

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubmitRequest struct {
	// job名称
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name"`
	// job类型
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type"`
	// 管道集合
	PipelineSet []string `protobuf:"bytes,3,rep,name=PipelineSet,proto3" json:"PipelineSet"`
	// job数据
	Data                 string   `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRequest) Reset()         { *m = SubmitRequest{} }
func (m *SubmitRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitRequest) ProtoMessage()    {}
func (*SubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{0}
}

func (m *SubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRequest.Unmarshal(m, b)
}
func (m *SubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRequest.Marshal(b, m, deterministic)
}
func (m *SubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRequest.Merge(m, src)
}
func (m *SubmitRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitRequest.Size(m)
}
func (m *SubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRequest proto.InternalMessageInfo

func (m *SubmitRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SubmitRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SubmitRequest) GetPipelineSet() []string {
	if m != nil {
		return m.PipelineSet
	}
	return nil
}

func (m *SubmitRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type AsyncSubmitResponse struct {
	// job ID需要记录
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AsyncSubmitResponse) Reset()         { *m = AsyncSubmitResponse{} }
func (m *AsyncSubmitResponse) String() string { return proto.CompactTextString(m) }
func (*AsyncSubmitResponse) ProtoMessage()    {}
func (*AsyncSubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{1}
}

func (m *AsyncSubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsyncSubmitResponse.Unmarshal(m, b)
}
func (m *AsyncSubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsyncSubmitResponse.Marshal(b, m, deterministic)
}
func (m *AsyncSubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsyncSubmitResponse.Merge(m, src)
}
func (m *AsyncSubmitResponse) XXX_Size() int {
	return xxx_messageInfo_AsyncSubmitResponse.Size(m)
}
func (m *AsyncSubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AsyncSubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AsyncSubmitResponse proto.InternalMessageInfo

func (m *AsyncSubmitResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SyncSubmitResponse struct {
	// job ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// job状态,2：执行完成，3：异常退出，4：已取消执行，5：推送失败
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status"`
	// 处理结果
	Result               string   `protobuf:"bytes,3,opt,name=Result,proto3" json:"Result"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncSubmitResponse) Reset()         { *m = SyncSubmitResponse{} }
func (m *SyncSubmitResponse) String() string { return proto.CompactTextString(m) }
func (*SyncSubmitResponse) ProtoMessage()    {}
func (*SyncSubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{2}
}

func (m *SyncSubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncSubmitResponse.Unmarshal(m, b)
}
func (m *SyncSubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncSubmitResponse.Marshal(b, m, deterministic)
}
func (m *SyncSubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncSubmitResponse.Merge(m, src)
}
func (m *SyncSubmitResponse) XXX_Size() int {
	return xxx_messageInfo_SyncSubmitResponse.Size(m)
}
func (m *SyncSubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncSubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncSubmitResponse proto.InternalMessageInfo

func (m *SyncSubmitResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SyncSubmitResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SyncSubmitResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*SubmitRequest)(nil), "job.SubmitRequest")
	proto.RegisterType((*AsyncSubmitResponse)(nil), "job.AsyncSubmitResponse")
	proto.RegisterType((*SyncSubmitResponse)(nil), "job.SyncSubmitResponse")
}

func init() { proto.RegisterFile("proto/job/job.proto", fileDescriptor_4f60868841c20a44) }

var fileDescriptor_4f60868841c20a44 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xd9, 0xdd, 0x5a, 0xe8, 0x14, 0x3d, 0x4c, 0x41, 0x83, 0xa7, 0x65, 0x41, 0xd8, 0x53,
	0x05, 0x3d, 0x8a, 0x07, 0xc1, 0x4b, 0x3d, 0x88, 0x24, 0xfd, 0x03, 0x49, 0x3b, 0x87, 0x94, 0xee,
	0x26, 0x36, 0x89, 0xd0, 0x7f, 0xe0, 0xcf, 0x96, 0xc9, 0x56, 0xa8, 0x50, 0xec, 0x61, 0xe1, 0xbd,
	0x8f, 0x7d, 0xbc, 0xc7, 0x04, 0x66, 0x7e, 0xe7, 0xa2, 0xbb, 0xdf, 0x38, 0xc3, 0xdf, 0x3c, 0x3b,
	0xac, 0x36, 0xce, 0x34, 0x1d, 0x5c, 0xaa, 0x64, 0x3a, 0x1b, 0x25, 0x7d, 0x26, 0x0a, 0x11, 0x11,
	0x46, 0xef, 0xba, 0x23, 0x51, 0xd4, 0x45, 0x3b, 0x91, 0x59, 0x33, 0x5b, 0xee, 0x3d, 0x89, 0x72,
	0x60, 0xac, 0xb1, 0x86, 0xe9, 0x87, 0xf5, 0xb4, 0xb5, 0x3d, 0x29, 0x8a, 0xa2, 0xaa, 0xab, 0x76,
	0x22, 0x8f, 0x11, 0xa7, 0x5e, 0x75, 0xd4, 0x62, 0x34, 0xa4, 0x58, 0x37, 0x77, 0x30, 0x7b, 0x09,
	0xfb, 0x7e, 0xf5, 0xdb, 0x19, 0xbc, 0xeb, 0x03, 0xe1, 0x15, 0x94, 0x8b, 0x75, 0xae, 0xac, 0x64,
	0xb9, 0x58, 0x37, 0x4b, 0x40, 0x75, 0xf6, 0x2f, 0xbc, 0x86, 0x71, 0x88, 0x3a, 0xa6, 0x90, 0x87,
	0x5d, 0xc8, 0x83, 0x63, 0x2e, 0x29, 0xa4, 0x2d, 0xaf, 0xe2, 0xea, 0x83, 0x7b, 0xf8, 0x2e, 0x00,
	0xde, 0x9c, 0x51, 0xb4, 0xfb, 0xb2, 0x2b, 0xc2, 0x67, 0x98, 0x1e, 0x6d, 0x41, 0x9c, 0xf3, 0x69,
	0xfe, 0x1c, 0xe3, 0x56, 0x64, 0x76, 0x62, 0x71, 0x5b, 0xe0, 0x13, 0x80, 0xfa, 0x3f, 0x7d, 0x33,
	0xb0, 0x13, 0x61, 0x33, 0xce, 0x4f, 0xf0, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x89, 0x9c, 0xa8,
	0x23, 0x99, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	// 异步提交job
	AsyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_AsyncSubmitClient, error)
	// 同步提交job
	SyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_SyncSubmitClient, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) AsyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_AsyncSubmitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[0], "/job.JobService/AsyncSubmit", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceAsyncSubmitClient{stream}
	return x, nil
}

type JobService_AsyncSubmitClient interface {
	Send(*SubmitRequest) error
	CloseAndRecv() (*AsyncSubmitResponse, error)
	grpc.ClientStream
}

type jobServiceAsyncSubmitClient struct {
	grpc.ClientStream
}

func (x *jobServiceAsyncSubmitClient) Send(m *SubmitRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *jobServiceAsyncSubmitClient) CloseAndRecv() (*AsyncSubmitResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AsyncSubmitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *jobServiceClient) SyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_SyncSubmitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[1], "/job.JobService/SyncSubmit", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceSyncSubmitClient{stream}
	return x, nil
}

type JobService_SyncSubmitClient interface {
	Send(*SubmitRequest) error
	CloseAndRecv() (*SyncSubmitResponse, error)
	grpc.ClientStream
}

type jobServiceSyncSubmitClient struct {
	grpc.ClientStream
}

func (x *jobServiceSyncSubmitClient) Send(m *SubmitRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *jobServiceSyncSubmitClient) CloseAndRecv() (*SyncSubmitResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SyncSubmitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	// 异步提交job
	AsyncSubmit(JobService_AsyncSubmitServer) error
	// 同步提交job
	SyncSubmit(JobService_SyncSubmitServer) error
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) AsyncSubmit(srv JobService_AsyncSubmitServer) error {
	return status.Errorf(codes.Unimplemented, "method AsyncSubmit not implemented")
}
func (*UnimplementedJobServiceServer) SyncSubmit(srv JobService_SyncSubmitServer) error {
	return status.Errorf(codes.Unimplemented, "method SyncSubmit not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_AsyncSubmit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(JobServiceServer).AsyncSubmit(&jobServiceAsyncSubmitServer{stream})
}

type JobService_AsyncSubmitServer interface {
	SendAndClose(*AsyncSubmitResponse) error
	Recv() (*SubmitRequest, error)
	grpc.ServerStream
}

type jobServiceAsyncSubmitServer struct {
	grpc.ServerStream
}

func (x *jobServiceAsyncSubmitServer) SendAndClose(m *AsyncSubmitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *jobServiceAsyncSubmitServer) Recv() (*SubmitRequest, error) {
	m := new(SubmitRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _JobService_SyncSubmit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(JobServiceServer).SyncSubmit(&jobServiceSyncSubmitServer{stream})
}

type JobService_SyncSubmitServer interface {
	SendAndClose(*SyncSubmitResponse) error
	Recv() (*SubmitRequest, error)
	grpc.ServerStream
}

type jobServiceSyncSubmitServer struct {
	grpc.ServerStream
}

func (x *jobServiceSyncSubmitServer) SendAndClose(m *SyncSubmitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *jobServiceSyncSubmitServer) Recv() (*SubmitRequest, error) {
	m := new(SubmitRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "job.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AsyncSubmit",
			Handler:       _JobService_AsyncSubmit_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SyncSubmit",
			Handler:       _JobService_SyncSubmit_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/job/job.proto",
}
