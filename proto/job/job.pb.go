// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/job/job.proto

package job

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AsyncSubmitRequest struct {
	// job名称
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name"`
	// job类型,回调通知时根据job类型执行不同的操作
	Type string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type"`
	// meta信息
	Meta map[string]string `protobuf:"bytes,3,rep,name=Meta,proto3" json:"Meta" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 插件集合
	PluginSet []string `protobuf:"bytes,4,rep,name=PluginSet,proto3" json:"PluginSet"`
	// job数据
	Data string `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data"`
	// job完成是否需要通知worker
	IsNotify bool `protobuf:"varint,6,opt,name=IsNotify,proto3" json:"IsNotify"`
	// job标签，便于job快速搜索
	Label string `protobuf:"bytes,7,opt,name=Label,proto3" json:"Label"`
	// 数据来源，提交job的应用名称
	Source string `protobuf:"bytes,8,opt,name=Source,proto3" json:"Source"`
	// task异常操作，0：退出job执行，1：跳过当前task继续执行下一个
	TaskExceptionOperation int32    `protobuf:"varint,9,opt,name=TaskExceptionOperation,proto3" json:"TaskExceptionOperation"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *AsyncSubmitRequest) Reset()         { *m = AsyncSubmitRequest{} }
func (m *AsyncSubmitRequest) String() string { return proto.CompactTextString(m) }
func (*AsyncSubmitRequest) ProtoMessage()    {}
func (*AsyncSubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{0}
}

func (m *AsyncSubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsyncSubmitRequest.Unmarshal(m, b)
}
func (m *AsyncSubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsyncSubmitRequest.Marshal(b, m, deterministic)
}
func (m *AsyncSubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsyncSubmitRequest.Merge(m, src)
}
func (m *AsyncSubmitRequest) XXX_Size() int {
	return xxx_messageInfo_AsyncSubmitRequest.Size(m)
}
func (m *AsyncSubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AsyncSubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AsyncSubmitRequest proto.InternalMessageInfo

func (m *AsyncSubmitRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AsyncSubmitRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AsyncSubmitRequest) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AsyncSubmitRequest) GetPluginSet() []string {
	if m != nil {
		return m.PluginSet
	}
	return nil
}

func (m *AsyncSubmitRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *AsyncSubmitRequest) GetIsNotify() bool {
	if m != nil {
		return m.IsNotify
	}
	return false
}

func (m *AsyncSubmitRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *AsyncSubmitRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *AsyncSubmitRequest) GetTaskExceptionOperation() int32 {
	if m != nil {
		return m.TaskExceptionOperation
	}
	return 0
}

type AsyncSubmitResponse struct {
	// job ID需要记录
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AsyncSubmitResponse) Reset()         { *m = AsyncSubmitResponse{} }
func (m *AsyncSubmitResponse) String() string { return proto.CompactTextString(m) }
func (*AsyncSubmitResponse) ProtoMessage()    {}
func (*AsyncSubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{1}
}

func (m *AsyncSubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsyncSubmitResponse.Unmarshal(m, b)
}
func (m *AsyncSubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsyncSubmitResponse.Marshal(b, m, deterministic)
}
func (m *AsyncSubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsyncSubmitResponse.Merge(m, src)
}
func (m *AsyncSubmitResponse) XXX_Size() int {
	return xxx_messageInfo_AsyncSubmitResponse.Size(m)
}
func (m *AsyncSubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AsyncSubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AsyncSubmitResponse proto.InternalMessageInfo

func (m *AsyncSubmitResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AsyncNotifyRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// job名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// job类型,异步回调通知时使用，根据不同值执行对应业务
	Type string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type"`
	// meta信息
	Meta map[string]string `protobuf:"bytes,4,rep,name=Meta,proto3" json:"Meta" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// job状态,2：执行完成，3：取消执行，4：系统异常，5：task推送失败，6：运行超时，7：业务处理异常，8：回调通知异常
	Status int32 `protobuf:"varint,5,opt,name=Status,proto3" json:"Status"`
	// 结果输出
	Result string `protobuf:"bytes,6,opt,name=Result,proto3" json:"Result"`
	// 异常信息
	Mesage               string   `protobuf:"bytes,7,opt,name=Mesage,proto3" json:"Mesage"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AsyncNotifyRequest) Reset()         { *m = AsyncNotifyRequest{} }
func (m *AsyncNotifyRequest) String() string { return proto.CompactTextString(m) }
func (*AsyncNotifyRequest) ProtoMessage()    {}
func (*AsyncNotifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{2}
}

func (m *AsyncNotifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsyncNotifyRequest.Unmarshal(m, b)
}
func (m *AsyncNotifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsyncNotifyRequest.Marshal(b, m, deterministic)
}
func (m *AsyncNotifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsyncNotifyRequest.Merge(m, src)
}
func (m *AsyncNotifyRequest) XXX_Size() int {
	return xxx_messageInfo_AsyncNotifyRequest.Size(m)
}
func (m *AsyncNotifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AsyncNotifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AsyncNotifyRequest proto.InternalMessageInfo

func (m *AsyncNotifyRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AsyncNotifyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AsyncNotifyRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AsyncNotifyRequest) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AsyncNotifyRequest) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AsyncNotifyRequest) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *AsyncNotifyRequest) GetMesage() string {
	if m != nil {
		return m.Mesage
	}
	return ""
}

type AsyncPostStartRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// job名称
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name"`
	// job类型,异步回调通知时使用，根据不同值执行对应业务
	Type string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type"`
	// meta信息
	Meta                 map[string]string `protobuf:"bytes,4,rep,name=Meta,proto3" json:"Meta" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AsyncPostStartRequest) Reset()         { *m = AsyncPostStartRequest{} }
func (m *AsyncPostStartRequest) String() string { return proto.CompactTextString(m) }
func (*AsyncPostStartRequest) ProtoMessage()    {}
func (*AsyncPostStartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{3}
}

func (m *AsyncPostStartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsyncPostStartRequest.Unmarshal(m, b)
}
func (m *AsyncPostStartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsyncPostStartRequest.Marshal(b, m, deterministic)
}
func (m *AsyncPostStartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsyncPostStartRequest.Merge(m, src)
}
func (m *AsyncPostStartRequest) XXX_Size() int {
	return xxx_messageInfo_AsyncPostStartRequest.Size(m)
}
func (m *AsyncPostStartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AsyncPostStartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AsyncPostStartRequest proto.InternalMessageInfo

func (m *AsyncPostStartRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AsyncPostStartRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AsyncPostStartRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AsyncPostStartRequest) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

type SyncSubmitRequest struct {
	// job名称
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name"`
	// meta信息
	Meta map[string]string `protobuf:"bytes,2,rep,name=Meta,proto3" json:"Meta" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 插件集合
	PluginSet []string `protobuf:"bytes,3,rep,name=PluginSet,proto3" json:"PluginSet"`
	// job数据
	Data string `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data"`
	// job标签，便于job快速搜索
	Label string `protobuf:"bytes,5,opt,name=Label,proto3" json:"Label"`
	// 数据来源，提交job的应用名称
	Source string `protobuf:"bytes,6,opt,name=Source,proto3" json:"Source"`
	// task异常操作，0：退出job执行，1：跳过当前task继续执行下一个
	TaskExceptionOperation int32    `protobuf:"varint,7,opt,name=TaskExceptionOperation,proto3" json:"TaskExceptionOperation"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *SyncSubmitRequest) Reset()         { *m = SyncSubmitRequest{} }
func (m *SyncSubmitRequest) String() string { return proto.CompactTextString(m) }
func (*SyncSubmitRequest) ProtoMessage()    {}
func (*SyncSubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{4}
}

func (m *SyncSubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncSubmitRequest.Unmarshal(m, b)
}
func (m *SyncSubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncSubmitRequest.Marshal(b, m, deterministic)
}
func (m *SyncSubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncSubmitRequest.Merge(m, src)
}
func (m *SyncSubmitRequest) XXX_Size() int {
	return xxx_messageInfo_SyncSubmitRequest.Size(m)
}
func (m *SyncSubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncSubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncSubmitRequest proto.InternalMessageInfo

func (m *SyncSubmitRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SyncSubmitRequest) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SyncSubmitRequest) GetPluginSet() []string {
	if m != nil {
		return m.PluginSet
	}
	return nil
}

func (m *SyncSubmitRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *SyncSubmitRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *SyncSubmitRequest) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *SyncSubmitRequest) GetTaskExceptionOperation() int32 {
	if m != nil {
		return m.TaskExceptionOperation
	}
	return 0
}

type SyncSubmitResponse struct {
	// job ID
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	// meta信息
	Meta map[string]string `protobuf:"bytes,2,rep,name=Meta,proto3" json:"Meta" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// job状态,0:待执行，1：执行中，2：执行完成，3：取消执行，4：系统异常，5：推送失败，6：运行超时，7：业务处理异常
	Status int32 `protobuf:"varint,3,opt,name=Status,proto3" json:"Status"`
	// 处理结果
	Result string `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result"`
	// 异常信息
	Mesage               string   `protobuf:"bytes,5,opt,name=Mesage,proto3" json:"Mesage"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncSubmitResponse) Reset()         { *m = SyncSubmitResponse{} }
func (m *SyncSubmitResponse) String() string { return proto.CompactTextString(m) }
func (*SyncSubmitResponse) ProtoMessage()    {}
func (*SyncSubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f60868841c20a44, []int{5}
}

func (m *SyncSubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncSubmitResponse.Unmarshal(m, b)
}
func (m *SyncSubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncSubmitResponse.Marshal(b, m, deterministic)
}
func (m *SyncSubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncSubmitResponse.Merge(m, src)
}
func (m *SyncSubmitResponse) XXX_Size() int {
	return xxx_messageInfo_SyncSubmitResponse.Size(m)
}
func (m *SyncSubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncSubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncSubmitResponse proto.InternalMessageInfo

func (m *SyncSubmitResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SyncSubmitResponse) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SyncSubmitResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SyncSubmitResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *SyncSubmitResponse) GetMesage() string {
	if m != nil {
		return m.Mesage
	}
	return ""
}

func init() {
	proto.RegisterType((*AsyncSubmitRequest)(nil), "job.AsyncSubmitRequest")
	proto.RegisterMapType((map[string]string)(nil), "job.AsyncSubmitRequest.MetaEntry")
	proto.RegisterType((*AsyncSubmitResponse)(nil), "job.AsyncSubmitResponse")
	proto.RegisterType((*AsyncNotifyRequest)(nil), "job.AsyncNotifyRequest")
	proto.RegisterMapType((map[string]string)(nil), "job.AsyncNotifyRequest.MetaEntry")
	proto.RegisterType((*AsyncPostStartRequest)(nil), "job.AsyncPostStartRequest")
	proto.RegisterMapType((map[string]string)(nil), "job.AsyncPostStartRequest.MetaEntry")
	proto.RegisterType((*SyncSubmitRequest)(nil), "job.SyncSubmitRequest")
	proto.RegisterMapType((map[string]string)(nil), "job.SyncSubmitRequest.MetaEntry")
	proto.RegisterType((*SyncSubmitResponse)(nil), "job.SyncSubmitResponse")
	proto.RegisterMapType((map[string]string)(nil), "job.SyncSubmitResponse.MetaEntry")
}

func init() { proto.RegisterFile("proto/job/job.proto", fileDescriptor_4f60868841c20a44) }

var fileDescriptor_4f60868841c20a44 = []byte{
	// 575 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0xff, 0xd2, 0x7a, 0x22, 0x2a, 0xd8, 0x42, 0xb2, 0x32, 0x1c, 0x4c, 0x04, 0x92, 0x4f,
	0x8e, 0x54, 0xfe, 0x2a, 0x0e, 0x20, 0xaa, 0xe6, 0x10, 0x44, 0x4b, 0xb5, 0xee, 0x89, 0xdb, 0x3a,
	0xdd, 0x46, 0x69, 0x93, 0xac, 0xf1, 0xae, 0x2b, 0x7c, 0xe7, 0x1d, 0x78, 0x0b, 0x1e, 0x82, 0xe7,
	0xe0, 0xc0, 0xa3, 0xa0, 0x5d, 0x3b, 0xce, 0xaf, 0xa1, 0x14, 0x38, 0x44, 0x9a, 0x19, 0xef, 0xce,
	0xce, 0x7c, 0xdf, 0x7c, 0x13, 0xd8, 0x4d, 0x52, 0x2e, 0x79, 0xf7, 0x82, 0xc7, 0xea, 0x17, 0x6a,
	0x0f, 0x59, 0x17, 0x3c, 0xf6, 0xee, 0x0f, 0x39, 0x1f, 0x8e, 0x59, 0x57, 0x87, 0xe2, 0xec, 0xbc,
	0xcb, 0x26, 0x89, 0xcc, 0x8b, 0x13, 0x9d, 0x1f, 0x26, 0xa0, 0x37, 0x22, 0x9f, 0x0e, 0xa2, 0x2c,
	0x9e, 0x8c, 0x24, 0x61, 0x1f, 0x33, 0x26, 0x24, 0x42, 0x60, 0x1f, 0xd3, 0x09, 0xc3, 0x86, 0x6f,
	0x04, 0x2e, 0xd1, 0xb6, 0x8a, 0x9d, 0xe6, 0x09, 0xc3, 0x66, 0x11, 0x53, 0x36, 0x7a, 0x06, 0xf6,
	0x11, 0x93, 0x14, 0x5b, 0xbe, 0x15, 0x34, 0xf7, 0x1e, 0x86, 0xea, 0xe9, 0xf5, 0x74, 0xa1, 0x3a,
	0xd3, 0x9b, 0xca, 0x34, 0x27, 0xfa, 0x38, 0x7a, 0x00, 0xee, 0xc9, 0x38, 0x1b, 0x8e, 0xa6, 0x11,
	0x93, 0xd8, 0xf6, 0xad, 0xc0, 0x25, 0xf3, 0x80, 0x7a, 0xe8, 0x90, 0x4a, 0x8a, 0x9d, 0xe2, 0x21,
	0x65, 0x23, 0x0f, 0xb6, 0xfb, 0xe2, 0x98, 0xcb, 0xd1, 0x79, 0x8e, 0x1b, 0xbe, 0x11, 0x6c, 0x93,
	0xca, 0x47, 0x77, 0xc1, 0x79, 0x47, 0x63, 0x36, 0xc6, 0x5b, 0xfa, 0x42, 0xe1, 0xa0, 0x16, 0x34,
	0x22, 0x9e, 0xa5, 0x03, 0x86, 0xb7, 0x75, 0xb8, 0xf4, 0xd0, 0x73, 0x68, 0x9d, 0x52, 0x71, 0xd9,
	0xfb, 0x34, 0x60, 0x89, 0x1c, 0xf1, 0xe9, 0xfb, 0x84, 0xa5, 0x54, 0x19, 0xd8, 0xf5, 0x8d, 0xc0,
	0x21, 0x35, 0x5f, 0xbd, 0x17, 0xe0, 0x56, 0x6d, 0xa0, 0xdb, 0x60, 0x5d, 0xb2, 0xbc, 0x84, 0x47,
	0x99, 0xaa, 0x88, 0x2b, 0x3a, 0xce, 0x66, 0xf0, 0x14, 0xce, 0x4b, 0x73, 0xdf, 0xe8, 0x3c, 0x86,
	0xdd, 0x25, 0x48, 0x44, 0xc2, 0xa7, 0x82, 0xa1, 0x1d, 0x30, 0xfb, 0x67, 0x3a, 0x83, 0x45, 0xcc,
	0xfe, 0x59, 0xe7, 0xf3, 0x8c, 0x89, 0xa2, 0xab, 0x19, 0x13, 0x2b, 0xc7, 0x2a, 0x66, 0xcc, 0x0d,
	0xcc, 0x58, 0x1b, 0x98, 0xb1, 0x57, 0x99, 0x59, 0x4a, 0xbf, 0xc6, 0x8c, 0x42, 0x4d, 0x52, 0x99,
	0x09, 0x8d, 0xbe, 0x43, 0x4a, 0x4f, 0xc5, 0x09, 0x13, 0xd9, 0x58, 0x6a, 0xf4, 0x5d, 0x52, 0x7a,
	0x2a, 0x7e, 0xc4, 0x04, 0x1d, 0xb2, 0x12, 0xfc, 0xd2, 0xbb, 0x39, 0x5a, 0xdf, 0x0c, 0xb8, 0xa7,
	0xeb, 0x3c, 0xe1, 0x42, 0x46, 0x92, 0xa6, 0xf2, 0x6f, 0x91, 0xd8, 0x5f, 0x42, 0xe2, 0xd1, 0x1c,
	0x89, 0xd5, 0x17, 0x56, 0xc1, 0xb8, 0x79, 0x13, 0x5f, 0x4d, 0xb8, 0x13, 0x5d, 0x4b, 0x54, 0x4f,
	0xcb, 0xe2, 0x4c, 0x5d, 0x9c, 0xaf, 0x8b, 0x8b, 0xfe, 0x4c, 0x3f, 0x56, 0x9d, 0x7e, 0xec, 0x05,
	0xfd, 0x54, 0x1a, 0x71, 0x36, 0x6b, 0xa4, 0x71, 0x4d, 0x8d, 0x6c, 0xfd, 0x1f, 0x8d, 0x7c, 0x37,
	0x00, 0x45, 0xbf, 0xd5, 0x48, 0x35, 0xd4, 0xe6, 0xc2, 0x50, 0xaf, 0x5f, 0xfb, 0xc5, 0x50, 0x5b,
	0x35, 0x43, 0x6d, 0xd7, 0x0c, 0xb5, 0xf3, 0x4f, 0x86, 0x7a, 0xef, 0x8b, 0x09, 0xf0, 0x96, 0xc7,
	0x11, 0x4b, 0xaf, 0x46, 0x03, 0x86, 0x0e, 0xa0, 0xb9, 0xb0, 0x11, 0x50, 0xbb, 0x66, 0x6d, 0x7a,
	0x78, 0xfd, 0x43, 0xd1, 0x61, 0x60, 0xa0, 0x57, 0x65, 0x8e, 0x72, 0x07, 0xb6, 0x6b, 0x04, 0xee,
	0xb5, 0xc2, 0x62, 0xfd, 0x87, 0xb3, 0xf5, 0x1f, 0xf6, 0xd4, 0xfa, 0x47, 0x87, 0xb0, 0xb3, 0x2c,
	0x02, 0xe4, 0xd5, 0x2b, 0xa3, 0x36, 0xcb, 0x6b, 0x80, 0x39, 0xfe, 0xa8, 0xb5, 0x79, 0x7c, 0xbd,
	0x76, 0x0d, 0x51, 0x81, 0x71, 0x70, 0xeb, 0x43, 0x33, 0xec, 0x56, 0x7f, 0x5d, 0x71, 0x43, 0x9b,
	0x4f, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xac, 0xe8, 0xd8, 0xce, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	// 异步提交job
	AsyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_AsyncSubmitClient, error)
	// 异步结果通知
	AsyncNotify(ctx context.Context, in *AsyncNotifyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// job开始执行通知
	AsyncPostStart(ctx context.Context, in *AsyncPostStartRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// 同步提交job(当调度器挂掉会导致job处理中断，谨用)
	SyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_SyncSubmitClient, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) AsyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_AsyncSubmitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[0], "/job.JobService/AsyncSubmit", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceAsyncSubmitClient{stream}
	return x, nil
}

type JobService_AsyncSubmitClient interface {
	Send(*AsyncSubmitRequest) error
	CloseAndRecv() (*AsyncSubmitResponse, error)
	grpc.ClientStream
}

type jobServiceAsyncSubmitClient struct {
	grpc.ClientStream
}

func (x *jobServiceAsyncSubmitClient) Send(m *AsyncSubmitRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *jobServiceAsyncSubmitClient) CloseAndRecv() (*AsyncSubmitResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AsyncSubmitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *jobServiceClient) AsyncNotify(ctx context.Context, in *AsyncNotifyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/job.JobService/AsyncNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) AsyncPostStart(ctx context.Context, in *AsyncPostStartRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/job.JobService/AsyncPostStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) SyncSubmit(ctx context.Context, opts ...grpc.CallOption) (JobService_SyncSubmitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobService_serviceDesc.Streams[1], "/job.JobService/SyncSubmit", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobServiceSyncSubmitClient{stream}
	return x, nil
}

type JobService_SyncSubmitClient interface {
	Send(*SyncSubmitRequest) error
	CloseAndRecv() (*SyncSubmitResponse, error)
	grpc.ClientStream
}

type jobServiceSyncSubmitClient struct {
	grpc.ClientStream
}

func (x *jobServiceSyncSubmitClient) Send(m *SyncSubmitRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *jobServiceSyncSubmitClient) CloseAndRecv() (*SyncSubmitResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SyncSubmitResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	// 异步提交job
	AsyncSubmit(JobService_AsyncSubmitServer) error
	// 异步结果通知
	AsyncNotify(context.Context, *AsyncNotifyRequest) (*empty.Empty, error)
	// job开始执行通知
	AsyncPostStart(context.Context, *AsyncPostStartRequest) (*empty.Empty, error)
	// 同步提交job(当调度器挂掉会导致job处理中断，谨用)
	SyncSubmit(JobService_SyncSubmitServer) error
}

// UnimplementedJobServiceServer can be embedded to have forward compatible implementations.
type UnimplementedJobServiceServer struct {
}

func (*UnimplementedJobServiceServer) AsyncSubmit(srv JobService_AsyncSubmitServer) error {
	return status.Errorf(codes.Unimplemented, "method AsyncSubmit not implemented")
}
func (*UnimplementedJobServiceServer) AsyncNotify(ctx context.Context, req *AsyncNotifyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AsyncNotify not implemented")
}
func (*UnimplementedJobServiceServer) AsyncPostStart(ctx context.Context, req *AsyncPostStartRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AsyncPostStart not implemented")
}
func (*UnimplementedJobServiceServer) SyncSubmit(srv JobService_SyncSubmitServer) error {
	return status.Errorf(codes.Unimplemented, "method SyncSubmit not implemented")
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_AsyncSubmit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(JobServiceServer).AsyncSubmit(&jobServiceAsyncSubmitServer{stream})
}

type JobService_AsyncSubmitServer interface {
	SendAndClose(*AsyncSubmitResponse) error
	Recv() (*AsyncSubmitRequest, error)
	grpc.ServerStream
}

type jobServiceAsyncSubmitServer struct {
	grpc.ServerStream
}

func (x *jobServiceAsyncSubmitServer) SendAndClose(m *AsyncSubmitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *jobServiceAsyncSubmitServer) Recv() (*AsyncSubmitRequest, error) {
	m := new(AsyncSubmitRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _JobService_AsyncNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AsyncNotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).AsyncNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/job.JobService/AsyncNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).AsyncNotify(ctx, req.(*AsyncNotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_AsyncPostStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AsyncPostStartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).AsyncPostStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/job.JobService/AsyncPostStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).AsyncPostStart(ctx, req.(*AsyncPostStartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_SyncSubmit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(JobServiceServer).SyncSubmit(&jobServiceSyncSubmitServer{stream})
}

type JobService_SyncSubmitServer interface {
	SendAndClose(*SyncSubmitResponse) error
	Recv() (*SyncSubmitRequest, error)
	grpc.ServerStream
}

type jobServiceSyncSubmitServer struct {
	grpc.ServerStream
}

func (x *jobServiceSyncSubmitServer) SendAndClose(m *SyncSubmitResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *jobServiceSyncSubmitServer) Recv() (*SyncSubmitRequest, error) {
	m := new(SyncSubmitRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "job.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AsyncNotify",
			Handler:    _JobService_AsyncNotify_Handler,
		},
		{
			MethodName: "AsyncPostStart",
			Handler:    _JobService_AsyncPostStart_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AsyncSubmit",
			Handler:       _JobService_AsyncSubmit_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SyncSubmit",
			Handler:       _JobService_SyncSubmit_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/job/job.proto",
}
